QUES 1
import threading
import time

def first():
    print(threading.currentThread().getName(), 'Starting')
    time.sleep(5)
    print('hello there')
    print(threading.currentThread().getName(), 'Ending')

t=threading.Thread(name='first',target=first())

t.start()

OUTPUT
MainThread Starting
hello there
MainThread Ending

QUES 2
import threading
import time

def first():
    i = 1
    while i < 11\
            :
        print(i)
        time.sleep(1)
        i = i + 1


t=threading.Thread(name='first',target=first())

t.start()
 
OUTPUT
1
2
3
4
5
6
7
8
9
10

Process finished with exit code 0
 

QUES 3
import threading
import time

def first():
    l=[5,2,3,6,7]
    m=len(l)
    for i in range(m):
        print(l[i])
        i=i+1
        print("%s" % (time.ctime(time.time())))
        time.sleep(2*(i))

t=threading.Thread(name='first',target=first())

t.start()

OUTPUT
5
Tue Jun 19 16:15:19 2018
2
Tue Jun 19 16:15:21 2018
3
Tue Jun 19 16:15:25 2018
6
Tue Jun 19 16:15:31 2018
7
Tue Jun 19 16:15:39 2018

Process finished with exit code 0

QUES 4
import threading

threadId = 1

def factorial(n):
   global threadId
   if n < 1:   # base case
       print("%s: %d" % ("Thread", threadId))
       threadId += 1
       return 1
   else:
       returnNumber = n * factorial( n - 1 )  # recursive call
       print(str(n) + '! = ' + str(returnNumber))
       return returnNumber

t=threading.Thread(target=factorial(5))
t2=threading.Thread(target=factorial(4))

OUTPUT
Thread: 1
1! = 1
2! = 2
3! = 6
4! = 24
5! = 120
Thread: 2
1! = 1
2! = 2
3! = 6
4! = 24

Process finished with exit code 0



